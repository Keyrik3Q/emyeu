function sendMessage(e) { chrome.tabs.query({ active: !0, currentWindow: !0 }, function(t) { void 0 !== t[0] && chrome.tabs.sendMessage(t[0].id, { greeting: e }, function(e) {}) }) }

function getQuotes() {
    x = [], $.ajax({
        type: "GET",
        url: apiQuotes,
        success: function(e) {
            $.each(e, function(e, t) {
                x.push(t);
                db.transaction(["quotes"], "readwrite").objectStore("quotes").add({ id: x[e].id, author: x[e].author, quote: x[e].quote })
            })
        }
    })
}

function testQuery() {
    var e = db.transaction("images", "readwrite").objectStore("images").index("by_fetch").get("false");
    e.onsuccess = function() { e.result }
}

function toDataUrl(e, t) {
    var a = new XMLHttpRequest;
    a.responseType = "blob", a.onload = function() {
        var n = new FileReader;
        n.onloadend = function() { t(n.result, e) }, n.readAsDataURL(a.response)
    }, a.open("GET", e), a.send()
}

function getAllItems(e, t) {
    var a = db.transaction(e, "readonly"),
        n = a.objectStore(e),
        o = [];
    a.oncomplete = function(e) {
        o.length > 0 && o.sort(function(e, t) {
            var a = e.id,
                n = t.id;
            return a < n ? -1 : a > n ? 1 : 0
        }), t(o)
    }, a.onerror = function(e) {};
    var r = n.openCursor();
    r.onerror = function(e) {}, r.onsuccess = function(e) {
        var t = e.target.result;
        t && (o.push(t.value), t.continue())
    }
}

function clearAllImages(e) {
    var t = db.transaction(["images"], "readwrite");
    t.oncomplete = function(e) {}, t.onerror = function(t) { e(!1) }, t.objectStore("images").clear().onsuccess = function(t) { e(!0) }
}

function getTotalImages(e) {
    if (isGettingTotalImages) e(-1);
    else {
        isGettingTotalImages = !0;
        var t = db.transaction("images", IDBTransaction.READ_ONLY).objectStore("images");
        req = t.count(), req.onsuccess = function() { e(req.result), isGettingTotalImages = !1 }
    }
}

function routineCheck() {
    var e = indexedDB.open(storeKey);
    e.onsuccess = function() {
        var t = e.result.transaction("images", "readwrite").objectStore("images").index("by_left").count(IDBKeyRange.only(["true", "false"]));
        t.onsuccess = function() {
            var e = t.result;
            void 0 === e || 1 != e && 0 != e || resetImages(), getTotalImages(function(e) { 0 == e && $.fetchImages(storeKey).then($.getCaches) })
        }
    }
}

function resetImages() {
    db.transaction(["images"], "readwrite").objectStore("images").index("by_left").openCursor(IDBKeyRange.only(["true", "true"])).onsuccess = function(e) {
        var t = e.target.result;
        if (t) {
            var a = t.value;
            a.shown = "false", a.showing = "false";
            var n = t.update(a);
            n.onsuccess = function() {}, n.onerror = function() {}, t.continue()
        }
    }
}

function clearBase64Data(e) {
    navigator.onLine && (db.transaction(["images"], "readwrite").objectStore("images").index("by_fetch").openCursor(IDBKeyRange.only("true")).onsuccess = function(t) {
        var a = t.target.result;
        if (a)
            if (void 0 !== a.value.fetch && "true" == a.value.fetch && "" != a.value.base64image) {
                var n = a.value;
                n.shown = "false", n.showing = "false", n.fetch = "false", n.base64image = "";
                var o = a.update(n);
                o.onsuccess = function() { a.continue() }, o.onerror = function() { a.continue() }
            } else a.continue();
        else e()
    })
}

function fetchBase64Images(e) {
    window.isFetching || getAllItems("images", function(t) {
        if (t.length > 0) {
            window.isFetching = !0;
            var a = new Date,
                n = new Date(a.getFullYear(), 0, 0),
                o = Math.floor((a - n) / 864e5);
            rotateDay = parseInt(t.length / itemPerDay);
            for (var r = 0, s = o % rotateDay, i = 0; i <= t.length; i++)
                if (void 0 !== t[i])
                    if (t[i].part == s)(void 0 === t[i].base64image || void 0 !== t[i].base64image && "" == t[i].base64image) && void 0 !== t[i].url ? toDataUrl(t[i].url, function(e, t) {
                        var a = db.transaction(["images"], "readwrite").objectStore("images").index("by_url"),
                            n = IDBKeyRange.only(t);
                        a.openCursor(n).onsuccess = function(t) {
                            var a = t.target.result;
                            if (a) {
                                var n = a.value;
                                n.base64image = e, n.fetch = "true", n.showing = "true", n.shown = "false";
                                var o = a.update(n);
                                o.onsuccess = function() {}, o.onerror = function() {}
                            }
                        }
                    }) : r++;
                    else {
                        var c = db.transaction(["images"], "readwrite").objectStore("images").index("by_url"),
                            u = IDBKeyRange.only(t[i].url);
                        c.openCursor(u).onsuccess = function(e) {
                            var t = e.target.result;
                            if (t) {
                                var a = t.value;
                                a.shown = "false", a.showing = "false", a.fetch = "false", a.base64image = "";
                                var n = t.update(a);
                                n.onsuccess = function() {}, n.onerror = function() {}
                            }
                        }
                    }
            r >= 10 && localStorage.setItem(storeKey + "_already_fetch", !0), localStorage.setItem(storeKey + "_lastdatefetching", o), localStorage.setItem(storeKey + "_total", t.length), window.isFetching = !1, e()
        }
    })
}

function prefetchBase64Images(e) {
    window.isPrefetching || getAllItems("images", function(t) {
        if (t.length > 0) {
            window.isPrefetching = !0, rotateDay = parseInt(t.length / itemPerDay);
            for (var a = new Date, n = new Date(a.getFullYear(), 0, 0), o = Math.floor((a - n) / 864e5), r = 0, s = o % rotateDay, i = (o + 1) % rotateDay, c = 0; c <= t.length; c++)
                if (void 0 !== t[c] && t[c].part != s)
                    if (t[c].part == i)(void 0 === t[c].base64image || void 0 !== t[c].base64image && "" == t[c].base64image) && void 0 !== t[c].url ? toDataUrl(t[c].url, function(e, t) {
                        var a = db.transaction(["images"], "readwrite").objectStore("images").index("by_url"),
                            n = IDBKeyRange.only(t);
                        a.openCursor(n).onsuccess = function(t) {
                            var a = t.target.result;
                            if (a) {
                                var n = a.value;
                                n.base64image = e, n.fetch = "true", n.showing = "true", n.shown = "false";
                                var o = a.update(n);
                                o.onsuccess = function() {}, o.onerror = function() {}
                            }
                        }
                    }) : r++;
                    else {
                        var u = db.transaction(["images"], "readwrite").objectStore("images").index("by_url"),
                            l = IDBKeyRange.only(t[c].url);
                        u.openCursor(l).onsuccess = function(e) {
                            var t = e.target.result;
                            if (t) {
                                var a = t.value;
                                a.shown = "false", a.showing = "false", a.fetch = "false", a.base64image = "";
                                var n = t.update(a);
                                n.onsuccess = function() {}, n.onerror = function() {}
                            }
                        }
                    }
            r >= 10 && localStorage.setItem(storeKey + "_already_prefetch", !0), localStorage.setItem(storeKey + "_lastdatefetching", o), localStorage.setItem(storeKey + "_total", t.length), window.isPrefetching = !1, e()
        }
    })
}
var storeKey = "123rf",
    newStoreKey = "123RF",
    apiEndpoint = "http://www.123rfapis.com/browser_ext/background.php",
    apiQuotes = "http://www.123rfapis.com/browser_ext/quotes.php",
    cache = {},
    indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB || window.shimIndexedDB;
indexedDB.deleteDatabase(storeKey);
var request = indexedDB.open(newStoreKey, 1),
    itemPerDay = 10,
    dateObj = new Date,
    now = new Date,
    start = new Date(now.getFullYear(), 0, 0),
    currDate = Math.floor((now - start) / 864e5),
    isFetching = !1,
    isPrefetching = !1,
    isGettingTotalImages = !1,
    db;
request.onupgradeneeded = function(e) {
    var t, a, n = e.target.result;
    if ((t = n.objectStoreNames.contains("images") ? (o = e.target.transaction).objectStore("images") : n.createObjectStore("images", { keyPath: "id" })).indexNames.contains("by_id") || t.createIndex("by_id", "id", { unique: !0 }), t.indexNames.contains("by_name") || t.createIndex("by_name", "name"), t.indexNames.contains("by_author") || t.createIndex("by_author", "author"), t.indexNames.contains("by_url") || t.createIndex("by_url", "url", { unique: !0 }), t.indexNames.contains("by_name_url") || t.createIndex("by_name_url", "name_url"), t.indexNames.contains("by_author_url") || t.createIndex("by_author_url", "author_url"), t.indexNames.contains("by_showing") || t.createIndex("by_showing", "showing", { unique: !1 }), t.indexNames.contains("by_shown") || t.createIndex("by_shown", ["shown", "part"], { unique: !1 }), t.indexNames.contains("by_part") || t.createIndex("by_part", "part", { unique: !1 }), t.indexNames.contains("by_fetch") || t.createIndex("by_fetch", "fetch", { unique: !1 }), t.indexNames.contains("by_fetch_part") || t.createIndex("by_fetch_part", ["fetch", "part"], { unique: !1 }), t.indexNames.contains("by_left") || t.createIndex("by_left", ["fetch", "shown", "part"], { unique: !1 }), n.objectStoreNames.contains("quotes") ? (o = e.target.transaction).objectStore("quotes") : n.createObjectStore("quotes", { keyPath: "id" }), n.objectStoreNames.contains("todolist")) {
        var o = e.target.transaction;
        a = o.objectStore("todolist")
    } else a = n.createObjectStore("todolist", { keyPath: "id", autoIncrement: !0 });
    a.indexNames.contains("by_status") || a.createIndex("by_status", "status"), a.indexNames.contains("by_position") || a.createIndex("by_position", "position")
}, request.onsuccess = function(e) {
    db = e.target.result, getTotalImages(function(e) { 0 == e && $.fetchImages(storeKey).then($.getCaches) });
    performance.now();
    getQuotes()
}, chrome.runtime.onMessage.addListener(function(e) {
    if ("loadDB" === e.cmd);
    else if ("routineCheck" === e.cmd) routineCheck(), sendMessage("abc");
    else if ("prefetch" === e.cmd) {
        var t = localStorage.getItem(storeKey + "_already_prefetch") || null;
        null != t && "false" != t || prefetchBase64Images(function() {})
    } else if ("force_prefetch" === e.cmd) prefetchBase64Images(function() {});
    else if ("fetchNext" === e.cmd) localStorage.setItem(storeKey + "_already_fetch", !1), localStorage.setItem(storeKey + "_already_prefetch", !1), fetchBase64Images(function() {});
    else if ("fetch" === e.cmd) {
        var a = localStorage.getItem(storeKey + "_already_fetch") || null,
            n = localStorage.getItem(storeKey + "_total");
        rotateDay = parseInt(n / itemPerDay);
        var o = currDate % rotateDay,
            r = db.transaction("images", IDBTransaction.READ_ONLY).objectStore("images").index("by_fetch_part").count(IDBKeyRange.only(["true", o]));
        r.onsuccess = function() { 0 == r.result || 1 == r.result ? (localStorage.setItem(storeKey + "_already_prefetch", !1), fetchBase64Images(function() {})) : null == a || "false" == a ? fetchBase64Images(function() {}) : sendMessage("fetchDone") }
    }
}), $.createCache = function(e) { return function(t, a) { return cache[t] || (cache[t] = $.Deferred(function(a) { e(a, t) }).promise()), cache[t].done(a) } }, $.fetchImages = $.createCache(function(e) { if (navigator.onLine) return $.ajax({ url: apiEndpoint, data: {}, dataType: "json", success: e.resolve, error: e.reject }) }), $.getCaches = function(e) {
    var t = new Date,
        a = new Date(t.getFullYear(), 0, 0),
        n = Math.floor((t - a) / 864e5),
        o = localStorage.getItem(storeKey + "_lastupdate") || "",
        r = localStorage.getItem(storeKey + "_lastdatefetching"),
        s = e[0].datetime;
    "" == o || new Date(o) != new Date(s) ? clearAllImages(function() {
        var t = db.transaction("images", "readwrite"),
            a = t.objectStore("images");
        if (e.length > 0) {
            var n = "";
            for (i = 0; i < e.length; i++) {
                var o = new Date;
                e[i].created_at = o, e[i].fetch = "false", e[i].shown = "false", e[i].showing = "false", e[i].part = Math.floor(i / itemPerDay), a.add(e[i]);
                var r = new Date(e[i].datetime);
                ("" == n || new Date(n) < r) && (n = e[i].datetime)
            }
            localStorage.setItem(storeKey + "_lastupdate", n)
        }
        t.oncomplete = function() { fetchBase64Images(function() {}) }
    }) : n != r ? (localStorage.setItem(storeKey + "_already_prefetch", !1), prefetchBase64Images(function() {})) : getAllItems("images", function(t) {
        var a = db.transaction("images", "readwrite"),
            n = a.objectStore("images");
        if (0 == t.length) {
            var o = "";
            for (i = 0; i < e.length; i++) {
                var r = new Date;
                e[i].created_at = r, e[i].fetch = "false", e[i].shown = "false", e[i].showing = "false", e[i].part = Math.floor(i / itemPerDay), n.add(e[i]);
                var s = new Date(e[i].datetime);
                ("" == o || new Date(o) < s) && (o = e[i].datetime)
            }
            localStorage.setItem(storeKey + "_lastupdate", o)
        }
        a.oncomplete = function() { fetchBase64Images(function() {}) }
    })
};